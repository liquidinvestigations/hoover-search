# #########################################################
#                       LINT TEST
# #########################################################
kind: pipeline
name: static-tests

steps:
- name: flake8
  image: alpine/flake8:3.9.1
  commands:
  - flake8

---
# #########################################################
#                       build arm64
# #########################################################
kind: pipeline
name: build arm64

depends_on:
- static-tests

platform:
  os: linux
  arch: arm64

clone:
  depth: 5000

steps:
- name: fetch
  image: alpine/git
  commands:
  - git fetch --tags

- name: docker push branch
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-search
    tags: ${DRONE_COMMIT_BRANCH}-arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push
  depends_on:
  - fetch

- name: docker push autotag + latest
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-search
    auto_tag: true
    auto_tag_suffix: arm64
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  depends_on:
  - docker push branch

---
# #########################################################
#                       build x86
# #########################################################

kind: pipeline
name: build x86

depends_on:
- static-tests

clone:
  depth: 5000

steps:
- name: fetch
  image: alpine/git
  commands:
  - git fetch --tags

- name: docker push branch
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-search
    tags: ${DRONE_COMMIT_BRANCH}
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  when:
    event:
    - push
  depends_on:
  - fetch

- name: docker push autotag + latest
  image: plugins/docker
  settings:
    repo: liquidinvestigations/hoover-search
    auto_tag: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  depends_on:
  - docker push branch
---

# #########################################################
#                   build multiplatform
# #########################################################

kind: pipeline
name: build multiplatform

depends_on:
- build x86
- build arm64

clone:
  disable: true


steps:
- name: docker multiplatform branch
  image: docker
  pull: if-not-exists
  environment:
    IMG: "liquidinvestigations/hoover-search:${DRONE_COMMIT_BRANCH}"
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  commands:
  - "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
  - "docker buildx imagetools  create --append $IMG --append $IMG-arm64 --tag  $IMG"
  when:
    event:
    - push
    - cron

- name: docker multiplatform tag
  image: docker
  pull: if-not-exists
  environment:
    IMG: "liquidinvestigations/hoover-search:${DRONE_TAG}"
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  commands:
  - "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
  - "docker buildx imagetools  create --append $IMG --append $IMG-arm64 --tag  $IMG"
  when:
    event:
    - tag
---

# #########################################################
#                       Tests
# #########################################################
kind: pipeline
name: test

depends_on:
- build multiplatform


services:
- name: search-rabbitmq
  image: rabbitmq:3.7.3
  volumes:
  - name: rabbit-v
    path: /var/lib/rabbitmq

- name: hoover-ui
  image: liquidinvestigations/hoover-ui:0.1
  volumes:
  - name: hoover-ui-v
    path: /opt/hoover/ui/build

- name: search-es
  image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
  environment:
    discovery.type: single-node
    cluster.routing.allocation.disk.watermark.low: "97%"
    cluster.routing.allocation.disk.watermark.high: "98%"
    cluster.routing.allocation.disk.watermark.flood_stage: "99%"
    cluster.info.update.interval: "10m"
  volumes:
  - name: es-v
    path: /var/lib/elasticsearch/data

- name: search-pg
  image: postgres:13
  environment:
    POSTGRES_USER: search
    POSTGRES_DATABASE: search
    POSTGRES_PASSWORD: search
  volumes:
  - name: pg-v
    path: /var/lib/postgresql/data

steps:
- name: py.test
  image: liquidinvestigations/hoover-search:${DRONE_COMMIT_BRANCH}
  pull: always
  environment:
    HOOVER_DB: postgresql://search:search@search-pg:5432/search
    WAIT_HOSTS: search-es:9200, search-pg:5432, search-rabbitmq:5672
    WAIT_HOSTS_TIMEOUT: 60
    DJANGO_SETTINGS_MODULE: testsuite.settings
    SECRET_KEY: secret-key-for-testing
    SEARCH_AMQP_URL: "amqp://search-rabbitmq"

  commands:
  - git config --global --add safe.directory "*"
  - mkdir -p volumes volumes/metrics volumes/metrics/users collections volumes/search-es-snapshots volumes/search-es/data
  - /wait
  - mkdir -p /opt/hoover/collections/testdata/data
  - curl -L https://github.com/liquidinvestigations/hoover-testdata/raw/ecc419bb7952dbdeb3d9f34fbd5b7f2eb4bb6f6b/data/disk-files/pdf-scans/PublicWaterMassMailing.pdf -o /opt/hoover/collections/testdata/data/original.pdf
    # - ./manage.py runperiodic &
    # - ./manage.py searchworker &
  - pytest --ignore=docker-setup -v testsuite/test_search.py testsuite/test_collection_access.py testsuite/test_ratelimits.py testsuite/test_upload.py

volumes:
- name: es-v
  temp: {}
- name: pg-v
  temp: {}
- name: rabbit-v
  temp: {}
- name: hoover-ui-v
  temp: {}

---
# #########################################################
#                       Secrets
# #########################################################
kind: secret
name: docker_username
get:
  path: liquid/ci/drone.docker
  name: username

---
kind: secret
name: docker_password
get:
  path: liquid/ci/drone.docker
  name: password

# ---
# kind: secret
# name: ghcr_docker_username
# get:
#   path: liquid/ci/gh-cr.docker
#   name: username
# 
# ---
# kind: secret
# name: ghcr_docker_password
# get:
#   path: liquid/ci/gh-cr.docker
#   name: password
